<Window x:Class="CurrencyConverter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CurrencyConverter"
        xmlns:conv="clr-namespace:CurrencyConverter.Core.Converters.UserInput"
        xmlns:valid="clr-namespace:CurrencyConverter.Core.Validation"
        mc:Ignorable="d"
        Name="CurrencyConversionWindow"
        Title="Currency Converter App" Height="600" Width="800"
        DataContext="{Binding MainViewModel, Source={StaticResource Locator}}">
    <Window.Resources>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Width" Value="170"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="DatePickerStyle" TargetType="DatePicker">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="HeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="ReadOnlyTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
        </Style>
        <conv:NullableIntConverter x:Key="NullableIntConverter"/>
        <conv:NumericValidationErrorConverter x:Key="NumericValidationErrorConverter"/>
        <conv:EvictionStrategyToBooleanConverter x:Key="EvictionStrategyToBooleanConverter"/>
    </Window.Resources>
    <Grid>
        <DockPanel Name="MainPanel" xmlns:i="http://schemas.microsoft.com/xaml/behaviors">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding CurrencyViewModel.LoadCurrenciesCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Text="Currency Converter" DockPanel.Dock="Top" Style="{StaticResource HeaderStyle}"/>
            <TextBlock Text="Conversion Input Data:" DockPanel.Dock="Top" Margin="5,0,0,0" FontWeight="SemiBold"/>
            <StackPanel DockPanel.Dock="Top" Name="InputDataPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Initial Amount:" VerticalAlignment="Center" Margin="5,0,26,0"/>
                <TextBox Name="InitialAmountTextBox" 
                         Style="{StaticResource TextBoxStyle}"
                         ToolTipService.ShowDuration="5000"
                         ToolTipService.InitialShowDelay="0"
                         ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Self}, 
                                                  Path=(Validation.Errors), 
                                                  Converter={StaticResource NumericValidationErrorConverter}}">
                    <TextBox.Text>
                        <Binding Path="CurrencyViewModel.Amount" 
                                 Mode="TwoWay" 
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <valid:DecimalInputValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Text="Source Currency:" VerticalAlignment="Center" Margin="5,0,0,0"/>
                <ComboBox Name="SourceCurrencyComboBox" 
                          Style="{StaticResource ComboBoxStyle}"
                          ItemsSource="{Binding CurrencyViewModel.Currencies}"
                          SelectedItem="{Binding CurrencyViewModel.SelectedSourceCurrency, Mode=TwoWay}"/>
                <TextBlock Text="Target Currency:" VerticalAlignment="Center" Margin="5,0,2,0"/>
                <ComboBox Name="TargetCurrencyComboBox" 
                          Style="{StaticResource ComboBoxStyle}"
                          ItemsSource="{Binding CurrencyViewModel.Currencies}"
                          SelectedItem="{Binding CurrencyViewModel.SelectedTargetCurrency, Mode=TwoWay}"/>
            </StackPanel>
            <TextBlock Text="Conversion Result:"
                       DockPanel.Dock="Top"
                       Margin="5,0,0,0" 
                       FontWeight="SemiBold"/>
            <StackPanel DockPanel.Dock="Top" Name="ConversionResultPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Converted Amount:" VerticalAlignment="Center" Margin="5,0,0,0"/>
                <TextBox Name="LatestAmountTextBlock" 
                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                         Text="{Binding CurrencyViewModel.LatestConvertedAmount, Mode=OneWay}"
                         IsReadOnly="True"/>
                <TextBlock Text="Date of the latest available conversion rate:" VerticalAlignment="Center" Margin="5,0,0,0"/>
                <TextBox Name="LatestDateTextBlock" 
                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                         Text="{Binding CurrencyViewModel.LatestConversionDate, Mode=OneWay}"
                         IsReadOnly="True"/>
            </StackPanel>
            <TextBlock Text="Historical Data Time Frame:"
                       DockPanel.Dock="Top"
                       Margin="5,0,0,0" 
                       FontWeight="SemiBold"/>
            <StackPanel DockPanel.Dock="Top" Name="TimeRangeStackPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Start Date:" Style="{StaticResource TextBlockStyle}"/>
                <DatePicker Name="StartDatePicker" 
                            Style="{StaticResource DatePickerStyle}" 
                            SelectedDate="{Binding HistoricalViewModel.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="End Date:" Style="{StaticResource TextBlockStyle}"/>
                <DatePicker Name="EndDatePicker" 
                            Style="{StaticResource DatePickerStyle}" 
                            SelectedDate="{Binding HistoricalViewModel.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <TextBlock Text="Cache Settings:"
                       DockPanel.Dock="Top"
                       Margin="5,0,0,0" 
                       FontWeight="SemiBold"/>
            <StackPanel DockPanel.Dock="Top" Name="CacheSettingsStackPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Eviction Strategy:" Style="{StaticResource TextBlockStyle}"/>
                <ComboBox Name="EvictionStrategyComboBox" 
                          Style="{StaticResource ComboBoxStyle}" 
                          ItemsSource="{Binding CacheSettingsViewModel.EvictionStrategies}" 
                          SelectedItem="{Binding CacheSettingsViewModel.SelectedEvictionStrategy, Mode=TwoWay}"
                          Width="155"/>
                <TextBlock Text="Entry Max Age (minutes):" Style="{StaticResource TextBlockStyle}"/>
                <TextBox Style="{StaticResource TextBoxStyle}"
                         IsEnabled="{Binding CacheSettingsViewModel.SelectedEvictionStrategy, 
                         Converter={StaticResource EvictionStrategyToBooleanConverter}, 
                         ConverterParameter=TimeBased}"
                         ToolTipService.ShowDuration="5000"
                         ToolTipService.InitialShowDelay="0"
                         ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Self}, 
                                        Path=(Validation.Errors), 
                                        Converter={StaticResource NumericValidationErrorConverter}}">
                    <TextBox.Text>
                        <Binding Path="CacheSettingsViewModel.MaxAgeMinutes"
                                 Converter="{StaticResource NullableIntConverter}"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <valid:IntegerInputValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Text="Max Number Of Entries:" Style="{StaticResource TextBlockStyle}"/>
                <TextBox Style="{StaticResource TextBoxStyle}" 
                         IsEnabled="{Binding CacheSettingsViewModel.SelectedEvictionStrategy, 
                         Converter={StaticResource EvictionStrategyToBooleanConverter}, 
                         ConverterParameter=SizeBased}"
                         ToolTipService.ShowDuration="5000"
                         ToolTipService.InitialShowDelay="0"
                         ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Self}, 
                                        Path=(Validation.Errors), 
                                        Converter={StaticResource NumericValidationErrorConverter}}">
                    <TextBox.Text>
                        <Binding Path="CacheSettingsViewModel.MaxElements" 
                                 Converter="{StaticResource NullableIntConverter}"
                                 Mode="TwoWay" 
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <valid:IntegerInputValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
            <Grid Name="HistoricalRatesGrid" Margin="5">
                <ListView ItemsSource="{Binding HistoricalViewModel.HistoricalRates}" Margin="2">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Date">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ConversionRateDate, StringFormat={}{0:yyyy-MM-dd}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Converted Amount">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ConvertedAmount, StringFormat={}{0:F2}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Target Currency" DisplayMemberBinding="{Binding TargetCurrency}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
